@mixin floatblock($dir:left,$width:100%){
	display:block;
	float:$dir;
	width:$width;
}

@mixin font($family:"Arial",$size:16,$color:$c-default,$line-height:$size){
	color:$color;
	@include font-size($size);
	@if $family == 'bebas'{
		font-family: 'BebasNeueBold', Impact, Haettenschweiler, 'Franklin Gothic Bold', Charcoal, 'Helvetica Inserat', 'Bitstream Vera Sans Bold', 'Arial Black', 'sans serif';
		text-transform:uppercase;
	} @else if $family == 'f-dm'{
		font-family: 'ITCFranklinGothicDMCD',sans-serif;
		font-weight:bold;
	} @else if $family == 'paradox'{
		font-family: 'DTLParadoxReg',sans-serif;
	} @else if $family == 'paradoxbold'{
		font-family: 'DTLParadoxBold',sans-serif;
	} @else if $family == 'f-bk'{
		font-family: 'ITCFranklinGothicBK';
	} @else if $family == 'f-bkcd'{
		font-family: 'ITCFranklinGothicBKCD';
	} @else {
		font-family:'Arial', sans-serif;
	}
}
@mixin font-size($sizeValue: 16) {
	font-size: $sizeValue + px;
	font-size: ($sizeValue / 10) + rem;
	line-height: ($sizeValue + 6) + px;
	line-height: (($sizeValue + 6) / 10) + rem;
}

@mixin arrowbefore($color:$t-white,$font-size:14px,$type:$fa-angle-right){
	position:relative;
	&:before{
		content: $type;
		font-family: FontAwesome;
		font-size: $font-size;
		position: absolute;
		left: -10px;
		color:$color;
	}
}
@mixin arrowafter($color:$t-white,$font-size:14px,$type:$fa-angle-right){
	position:relative;
	&:after{
		content: $type;
		font-family: FontAwesome;
		font-size: $font-size;
		position: absolute;
		right: -10px;
		color:$color;
	}
}
@mixin arrowdown($color:inherit,$font-size:12px,$type:$fa-angle-right){
	position:relative;
	padding-right:20px;
	&:after{
		content: $type;
		font-family: FontAwesome;
		font-size: $font-size;
		position: absolute;
		padding:0 10px;
		top:calc(50% - #{$font-size / 2});
		color:$color;
		-webkit-transform:rotateZ(90deg);
		-ms-transform:rotateZ(90deg);
		transform: rotateZ(90deg);
		transition:all .2s;
	}
}
@mixin v-gradient(){
	@include filter-gradient(#000000, #a60000, vertical); // IE6-8
	// IE9 SVG, needs conditional override of 'filter' to 'none'
	$experimental-support-for-svg: true;
	@include background-image(linear-gradient(top,  rgba(0,0,0,0) 0%,rgba(0,0,0,0.65) 100%));
}
@mixin h-gradient-dark($back-color){
	@include filter-gradient(#570000, #000000, horizontal); // IE6-8
	// IE9 SVG, needs conditional override of 'filter' to 'none'
	$experimental-support-for-svg: true;
	@include background-image(linear-gradient(left, rgba(0,0,0,0.8) 0%,rgba(0,0,0,0.7) 5%,rgba(0,0,0,0.55) 23%,rgba(0,0,0,0.33) 77%,rgba(0,0,0,0) 99%));
	background-color:$back-color
}
@mixin h-gradient($back-color){
	@include filter-gradient(#570000, #000000, horizontal); // IE6-8
	// IE9 SVG, needs conditional override of 'filter' to 'none'
	$experimental-support-for-svg: true;
	@include background-image(linear-gradient(left, rgba(0,0,0,0.28) 0%,rgba(0,0,0,0.22) 5%,rgba(0,0,0,0.15) 23%,rgba(0,0,0,0) 77%,rgba(0,0,0,0) 99%));
	background-color:$back-color
}
@mixin skew($color:$t-white,$deg:-15deg){
	&:before{
		content:'';
		position:absolute;
		display:block;
		float:left;
		width:100%;
		height:100%;
		left:0;
		top:0;
		background:$color;
		-webkit-transform:skew($deg);
		-ms-transform:skew($deg);
		transform:skew($deg);
		z-index:-1;
	}
}
//@include calc('width','100% - 75px','170px');
@mixin calc($prop,$value,$fallback:100%){
	#{$prop}:#{$fallback};
	#{$prop}:-webkit-calc(#{$value});
	#{$prop}:calc(#{$value});
}